services:
  app:
    build: .
    ports:
      - "5173:5173"
    depends_on:
      - ollama
      - hapi      
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - FHIR_BASE_URL=http://hapi:8090/fhir      
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    entrypoint: >
      sh -c "ollama serve & sleep 5 && ollama pull llama3 && wait"

  hapi:
    container_name: hapi-fhir
    build:
      context: ./hapi-server
      dockerfile: Dockerfile

      args:
        # Ensure the image is built WITHOUT the Cloud SQL SocketFactory for local dev
        CLOUDSQL: "false"
    environment:
      # Use the local Spring profile (no SocketFactory)
      - SPRING_PROFILES_ACTIVE=local

      # Ensure the FHIR version is visible *very early* in bootstrap
      - JAVA_TOOL_OPTIONS=-XX:+UseContainerSupport -XX:MaxRAMPercentage=70 -Djava.security.egd=file:/dev/./urandom -Dhapi.fhir.fhir_version=R4
      - HAPI_FHIR_VERSION=R4

      # Postgres connection (direct TCP to the local db service)
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/hapi
      - SPRING_DATASOURCE_USERNAME=hapi
      - SPRING_DATASOURCE_PASSWORD=hapi
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgresDialect

      # Allow Spring to resolve a benign bean cycle seen in this starter combo
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true

      # Make HAPI generate stable absolute URLs for local dev
      - HAPI_FHIR_SERVER_ADDRESS=http://hapi:8090/fhir
      - SERVER_FORWARD_HEADERS_STRATEGY=framework
      - SERVER_USE_FORWARD_HEADERS=true
      - SERVER_TOMCAT_PROTOCOL_HEADER=x-forwarded-proto
      - SERVER_TOMCAT_REMOTE_IP_HEADER=x-forwarded-for
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8090:8090"
    volumes:
      # Persist Lucene index data between restarts
      - lucene_data:/data/lucene
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8090/fhir/metadata"]
      interval: 10s
      timeout: 5s
      retries: 30

  db:
    image: postgres:16
    container_name: fhir-db
    environment:
      POSTGRES_DB: hapi
      POSTGRES_USER: hapi
      POSTGRES_PASSWORD: hapi
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hapi -d hapi -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  ollama:
  db_data:
  lucene_data: 
  vite:  
